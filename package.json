{
  "$schema": "vscode://schemas/vscode-extensions",
  "name": "specdev",
  "displayName": "SpecDev - Specification Development Tool",
  "description": "Enhanced Kiro-style workflow plugin with mandatory testing validation, error handling protocols, and comprehensive project management for all application types",
  "version": "0.4.0",
  "publisher": "specdev",
  "author": {
    "name": "SpecDev Team"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/specdev/specdev-cursor-plugin.git"
  },
  "bugs": {
    "url": "https://github.com/specdev/specdev-cursor-plugin/issues"
  },
  "homepage": "https://github.com/specdev/specdev-cursor-plugin#readme",
  "keywords": [
    "requirements",
    "design",
    "tasks",
    "specification",
    "kiro",
    "workflow",
    "testing",
    "validation",
    "tdd",
    "quality-assurance",
    "error-handling",
    "markdown",
    "mermaid",
    "jest",
    "vitest",
    "playwright"
  ],
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": ["Other"],
  
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "specdev.openSpecDev",
        "title": "Open SpecDev",
        "category": "SpecDev"
      },
        {
          "command": "specdev.init",
          "title": "Init SpecDev Project",
          "category": "SpecDev"
        },
      {
        "command": "specdev.steering",
        "title": "Analyze Existing Project (Steering)",
        "category": "SpecDev"
      },
      {
        "command": "specdev.summarize",
        "title": "Create Context Summary",
        "category": "SpecDev"
      },
      {
        "command": "specdev.update",
        "title": "Update SpecDev Installation",
        "category": "SpecDev"
      },
      {
        "command": "specdev.generateRequirementsFromPrompt",
        "title": "Generate Requirements from Prompt",
        "category": "SpecDev"
      },
      {
        "command": "specdev.generateDesignFromRequirements",
        "title": "Generate Design from Requirements",
        "category": "SpecDev"
      },
      {
        "command": "specdev.generateTasksFromDesign",
        "title": "Generate Tasks from Design",
        "category": "SpecDev"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "specdev.openSpecDev",
          "group": "navigation"
        }
      ],
              "commandPalette": [
                { "command": "specdev.openSpecDev" },
                { "command": "specdev.init" },
                { "command": "specdev.steering" },
        { "command": "specdev.summarize" },
        { "command": "specdev.update" },
                { "command": "specdev.generateRequirementsFromPrompt" },
                { "command": "specdev.generateDesignFromRequirements" },
                { "command": "specdev.generateTasksFromDesign" }
              ]
    },
    "configuration": {
      "type": "object",
      "title": "SpecDev Settings",
      "properties": {
        "specdev.cache.ttlDays": {
          "type": "number",
          "default": 7,
          "minimum": 0,
          "description": "Number of days to cache fetched documents (docs, web pages) before revalidating."
        },
        "specdev.rules.location": {
          "type": "string",
          "enum": ["auto", "cursor", "windsurf", "custom"],
          "default": "auto",
          "description": "Where to install and read agent rule files (.mdc). Auto prefers existing .windsurf/rules or falls back to .cursor/rules."
        },
        "specdev.rules.customPath": {
          "type": "string",
          "default": "",
          "description": "Custom relative or absolute path for agent rules when rules.location is set to 'custom'."
        },
        "specdev.webview.retainContextWhenHidden": {
          "type": "boolean",
          "default": false,
          "description": "Keep webview state alive when hidden. Prefer getState/setState over this for performance."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile && npm run build-webview",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "build-webview": "cd webview && npm run build"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "eslint": "^8.28.0",
    "typescript": "^4.9.4",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.0"
  },
  "dependencies": {}
}
